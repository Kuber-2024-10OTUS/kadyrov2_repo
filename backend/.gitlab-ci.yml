stages:
  - build
  - test
  - release
  - deploy
  #- notify


variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  TEXT: ${NEXUS_REPO_URL}/repository/${NEXUS_REPO_BACKEND_NAME}/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar
  JAVA_OPTS: -XX:MaxRAMPercentage=90


cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository


build-backend-code-job:
  stage: build  
  # rules: # rules и only в данных случаях взаимозаменяемы
  #     - changes:
  #          - backend/**/*
  # only:
  #   changes:
  #   - backend/**/*
  # cache:
  #   paths:
  #   - ${CI_PROJECT_DIR}/.m2/repository
  #   - .npm/
  script:
    - cd backend
    - mkdir -p ${MAVEN_REPO_PATH}
    - mvn -Dmaven.repo.local=${MAVEN_REPO_PATH} package -Dversion.application=${VERSION}
  # artifacts:
  #   name: "backend"
  #   paths:
  #     - backend/target/sausage-store-${VERSION}.jar
  #     - ${CI_PROJECT_DIR}/.m2/


sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16
  needs:
    - build-backend-code-job
  # variables:
  #   SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  # cache:
  #   key: "${CI_JOB_NAME}"
  #   paths:
  #     - .sonar/cache
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACK}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_BACKEND_LOGIN}
    # - mvn verify sonar:sonar -Dsonar.qualitygate.wait=true \
    #   -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACK} \
    #   -Dsonar.host.url=${SONARQUBE_URL} \
    #   -Dsonar.login=${SONAR_BACKEND_LOGIN} \
    #   -Dsonar.projectName=36_БУЛАТХАСАНОВ_БЭКЭНД


gitlab-sast:
  stage: test
  needs:
    - build-backend-code-job
  trigger:
    include:
      - template: Security/SAST.gitlab-ci.yml


upload-backend-release:
  stage: release
  # only:
  #   changes:
  #     - backend/**/*
  needs:
    - build-backend-code-job
    - sonarqube-backend-sast
    - gitlab-sast
  script:
    - cd backend
    - mvn -DskipTests -s settings.xml deploy -Dmaven.repo.local=${MAVEN_REPO_PATH} -Dversion.application=${VERSION}


deploy-backend:
  stage: deploy
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    #- ssh-keyscan fhmpp9umslnfkv2ev3jc >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    #выполняем простую команду для проверки
    - ssh ${DEV_USER}@${DEV_HOST}
    - curl -u ${NEXUS_REPO_USER}:${NEXUS_REPO_PASS} -o sausage-store-${VERSION}.jar ${NEXUS_REPO_URL}/${NEXUS_REPO_BACKEND_NAME}/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar
    # запускаем бэкенд  
    - java -jar sausage-store-${VERSION}.jar & 

# sonarqube-backend-sast:
#   stage: test
#   image: maven:3.8-openjdk-16
#   dependencies:
#     - build-backend-code-job
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script: |
#     cd backend
#     mvn verify sonar:sonar \
#     -Dsonar.qualitygate.wait=true \
#     -Dsonar.projectKey=$SONAR_PROJECT_KEY_BACK \
#     -Dsonar.host.url=$SONARQUBE_URL \
#     -Dsonar.login=$SONAR_BACKEND_LOGIN \
#     -Dsonar.projectName=36_БУЛАТХАСАНОВ_БЭКЭНД


#telegram-notification-backend:
#  stage: notify
#   needs:
#     - 'build-backend-code-job'
#     - 'sonarqube-backend-sast'
#   script:
#     - 'curl -s -X POST --location --header "PRIVATE-TOKEN: Zs9_AC8tvymP_EJTHXpa" --header "Content-Type: application/json" --data "{\"chat_id\": \"$id\", \"text\": \"Хасанов Булат собрал backend приложение $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-backend-code-job\"}" https://api.telegram.org/bot$bot_token/sendMessage'
#   rules:
#     - when: on_success
#       if: '$CI_COMMIT_TITLE == "send notification"'
#       changes:
#       - backend/**/* 